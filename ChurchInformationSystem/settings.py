"""
Django settings for ChurchInformationSystem project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ....)
import os

##
#   Directory settings.
##
SETTINGS_DIR = '%s/ChurchInformationSystem' % (os.path.dirname(os.path.dirname(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print("Base DIR: ")
print(BASE_DIR)

##
#   Debug settings.
#   Determine ROLE.
#   SECURITY WARNING: don't run with debug turned on in production!
##
ROLE = open('/etc/role', 'r').readline().strip().lower()
DEBUG = True if ROLE in ['dev', 'local', 'localwithcache'] else False

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*db%9xc1ni@r=x*e1c)k@p$ih6obfa+4n20y+g!)^x1e@hv3n9'

ALLOWED_HOSTS = ['127.0.0.1','192.168.1.247','localhost','xlntwebdev.net','www.xlntwebdev.net','staging.tricountynaz.net'] if DEBUG else ['.tricountynaz.net','35.184.61.178','www.tricountynaz.net']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'blog',
    'communications',
    'digital_worship',
    'event_calendar',
    'manager',
    'website',
    'rest_framework',
)

MIDDLEWARE = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'ChurchInformationSystem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,  'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #'client.context_processor.default_processor'
            ],
        },
    },
]


##
#   Set up URL configuration, WSGI configuration, and templates.
##
ROOT_URLCONF = 'ChurchInformationSystem.urls'
WSGI_APPLICATION = 'ChurchInformationSystem.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR , 'db.sqlite3'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'cis',
            'USER': 'cisadmin',
            'PASSWORD': 'A1pha&0M3ga',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

##
#   Logging configuration.
#   See http://docs.djangoproject.com/en/dev/topics/logging for
#   more details on how to customize your logging configuration.
##
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': "[%(asctime)s] %(levelname)s [%(filename)s:%(funcName)s:%(lineno)s]: | ***** %(message)s ***** |",
            'datefmt': "%d%b%Y %I:%M:%S %p",
        },
        'verbose': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'cis': {
            'handlers': ['console'],
            'filters': [],
            'propogate': True,
            'level': 'DEBUG'
        }
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = '%s/static/' % ( BASE_DIR ) if DEBUG else '%s/static/' % ( BASE_DIR )
STATIC_URL = '/static/'

print(STATIC_ROOT)
print(STATIC_URL)

MEDIA_URL = '/media/'
MEDIA_ROOT = '/home/joe/media/'

#TEMPLATE_DIRS = (
#    os.path.join(BASE_DIR,  'templates'),
#)

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework_xml.renderers.XMLRenderer',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}
